wine.cl <- kmeans( centered.wine, i, algorithm = "Lloyd", iter.max = 1000)
#j<-1
print(paste("kmeans :",i))
for (j in 1:nrow(centered.wine)){
otherbottles<-which(wine.cl$cluster != wine.cl$cluster[j])
print(wine.cl$cluster[j])
print(paste("j: ",j))
#distances<-sqrt((bottle[1]-centered.wine[otherbottles][1])^2+(bottle[2]-centered.wine[otherbottles][2])^2)
#meandist<-mean(distances)
#s[j]<-wine.cl$withinss[]
#j<-j+1
}
}
wine.cl$cluster[100,1]
wine.cl$cluster[100]
centered.wine[100]
head(centered.wine)
centered.wine[1:2]
type(centered.wine)
class(centered.wine)
centered.wine[1,1]
centered.wine[1,2]
centered.wine[1,1:2]
otherbottles
distances<-sqrt((centered.wine[j,1]-centered.wine[otherbottles,1])^2+((centered.wine[j,2]-centered.wine[otherbottles,2])^2)
j
distances<-sqrt((centered.wine[j,1]-centered.wine[otherbottles,1])^2+(centered.wine[j,2]-centered.wine[otherbottles,2])^2)
distances
meandist<-mean(distances)
meandist
samebottles<-which(wine.cl$cluster == wine.cl$cluster[j])
otherdistances<-sqrt((centered.wine[j,1]-centered.wine[samebottles,1])^2+(centered.wine[j,2]-centered.wine[samebottles,2])^2)
samedistances<-sqrt((centered.wine[j,1]-centered.wine[samebottles,1])^2+(centered.wine[j,2]-centered.wine[samebottles,2])^2)
samedistances
samemeandist<-sum(samedistances)/(length(samedistances)-1)
samemeandist
s<-rep(0,nrow(wine)) # s contains the silhouette score
# calculate b(i)
#for (i in 1:k_max){
for (i in c(4,5)) {
wine.cl <- kmeans( centered.wine, i, algorithm = "Lloyd", iter.max = 1000)
#j<-1
print(paste("kmeans :",i))
for (j in 1:nrow(centered.wine)){
otherbottles<-which(wine.cl$cluster != wine.cl$cluster[j])
#print(wine.cl$cluster[j])
#print(paste("j: ",j))
otherdistances<-sqrt((centered.wine[j,1]-centered.wine[otherbottles,1])^2+(centered.wine[j,2]-centered.wine[otherbottles,2])^2)
othermeandist<-mean(otherdistances)
samebottles<-which(wine.cl$cluster == wine.cl$cluster[j])
samedistances<-sqrt((centered.wine[j,1]-centered.wine[samebottles,1])^2+(centered.wine[j,2]-centered.wine[samebottles,2])^2)
samemeandist<-sum(samedistances)/(length(samedistances)-1)
s[j]<-(othermeandist-samemeandist)/max(othermeandist,samemeandist)
}
}
s<-rep(0,nrow(wine)) # s contains the silhouette score
# calculate b(i)
#for (i in 1:k_max){
for (i in 1:k_max {
wine.cl <- kmeans( centered.wine, i, algorithm = "Lloyd", iter.max = 1000)
#j<-1
print(paste("kmeans :",i))
for (j in 1:nrow(centered.wine)){
otherbottles<-which(wine.cl$cluster != wine.cl$cluster[j])
#print(wine.cl$cluster[j])
#print(paste("j: ",j))
otherdistances<-sqrt((centered.wine[j,1]-centered.wine[otherbottles,1])^2+(centered.wine[j,2]-centered.wine[otherbottles,2])^2)
othermeandist<-mean(otherdistances)
samebottles<-which(wine.cl$cluster == wine.cl$cluster[j])
samedistances<-sqrt((centered.wine[j,1]-centered.wine[samebottles,1])^2+(centered.wine[j,2]-centered.wine[samebottles,2])^2)
samemeandist<-sum(samedistances)/(length(samedistances)-1)
s[j]<-(othermeandist-samemeandist)/max(othermeandist,samemeandist)
}
}
stemp<-rep(0,k_max) # s contains the silhouette score
s<-rep(0,nrow(wine))
# calculate b(i)
#for (i in 1:k_max){
for (i in 1:k_max) {
wine.cl <- kmeans( centered.wine, i, algorithm = "Lloyd", iter.max = 1000)
#j<-1
print(paste("kmeans :",i))
for (j in 1:nrow(centered.wine)){
otherbottles<-which(wine.cl$cluster != wine.cl$cluster[j])
#print(wine.cl$cluster[j])
#print(paste("j: ",j))
otherdistances<-sqrt((centered.wine[j,1]-centered.wine[otherbottles,1])^2+(centered.wine[j,2]-centered.wine[otherbottles,2])^2)
othermeandist<-mean(otherdistances)
samebottles<-which(wine.cl$cluster == wine.cl$cluster[j])
samedistances<-sqrt((centered.wine[j,1]-centered.wine[samebottles,1])^2+(centered.wine[j,2]-centered.wine[samebottles,2])^2)
samemeandist<-sum(samedistances)/(length(samedistances)-1)
stemp[j]<-(othermeandist-samemeandist)/max(othermeandist,samemeandist)
}
s[i]<-mean(stemp)
}
s
stemp<-rep(0,nrow(wine)) # s contains the silhouette score
s<-rep(0,k_max)
# calculate b(i)
#for (i in 1:k_max){
for (i in 1:k_max) {
wine.cl <- kmeans( centered.wine, i, algorithm = "Lloyd", iter.max = 1000)
#j<-1
print(paste("kmeans :",i))
for (j in 1:nrow(centered.wine)){
otherbottles<-which(wine.cl$cluster != wine.cl$cluster[j])
#print(wine.cl$cluster[j])
#print(paste("j: ",j))
otherdistances<-sqrt((centered.wine[j,1]-centered.wine[otherbottles,1])^2+(centered.wine[j,2]-centered.wine[otherbottles,2])^2)
othermeandist<-mean(otherdistances)
samebottles<-which(wine.cl$cluster == wine.cl$cluster[j])
samedistances<-sqrt((centered.wine[j,1]-centered.wine[samebottles,1])^2+(centered.wine[j,2]-centered.wine[samebottles,2])^2)
samemeandist<-sum(samedistances)/(length(samedistances)-1)
stemp[j]<-(othermeandist-samemeandist)/max(othermeandist,samemeandist)
}
s[i]<-mean(stemp)
}
s
stemp<-rep(0,nrow(wine)) # s contains the silhouette score
s<-rep(0,k_max)
# calculate b(i)
#for (i in 1:k_max){
for (i in 2:k_max) {
wine.cl <- kmeans( centered.wine, i, algorithm = "Lloyd", iter.max = 1000)
#j<-1
print(paste("kmeans :",i))
for (j in 1:nrow(centered.wine)){
otherbottles<-which(wine.cl$cluster != wine.cl$cluster[j])
#print(wine.cl$cluster[j])
#print(paste("j: ",j))
otherdistances<-sqrt((centered.wine[j,1]-centered.wine[otherbottles,1])^2+(centered.wine[j,2]-centered.wine[otherbottles,2])^2)
othermeandist<-mean(otherdistances)
samebottles<-which(wine.cl$cluster == wine.cl$cluster[j])
samedistances<-sqrt((centered.wine[j,1]-centered.wine[samebottles,1])^2+(centered.wine[j,2]-centered.wine[samebottles,2])^2)
samemeandist<-sum(samedistances)/(length(samedistances)-1)
stemp[j]<-(othermeandist-samemeandist)/max(othermeandist,samemeandist)
}
s[i]<-mean(stemp)
}
s
plot(s,seq(1,length(s)))
plot(seq(1,length(s)),s)
ch <- rep(0,k_max)
n <- nrow(centered.wine)
for (i in 2:k_max){
ch[i] <- (betweenss[i]/(i-1)) / (tot.withinss[i]/(n-i))
}
plot(2:k_max, xlab = 'K',ch[2:k_max], ylab= 'CH', main= 'CH index against K')
wine.cl
silhouette(wine.cl)
silhouette(wine.cl$cluster)
str(wine.cl)
data(ruspini)
pr4 <- pam(ruspini, 4)
str(si <- silhouette(pr4))
(ssi <- summary(si))
plot(si) # silhouette plot
plot(si, col = c("red", "green", "blue", "purple"))# with cluster-wise coloring
pr5<-pam(centered.wine,5)
silhouette(pr5)
1/.321
2*pi*25
2*pi*25/2
2*pi*(5/sqrt(2))
2*pi*(5/sqrt(2))^2
mod2
data[,1]
mod2<-arima(data,order=c(1,0,1),seasonal=list(order=c(1,0,1),period=12))
head(data)
plot.ts(data)
nrow(data)
data<-read.csv(file.choose())
head(data)
data<-read.csv(file.choose(), header=FALSE)
head(data)
mod2<-arima(data,order=c(1,0,1),seasonal=list(order=c(1,0,1),period=12))
summary(mod2)
source('~/Documents/ThirdModule/Practicum/different_scores.R')
source('~/Documents/ThirdModule/Practicum/different_scores.R')
mod2
fitted(mod2)
str(mod2)
?fitted
attr(mod2)
attributes(mod2)
fits<-mod2$residuals+data[,1]
fits
plot.ts(fits)
differences<-abs(data-fits)
differences<-abs(data[,1]-fits)
differences
abs(mod2$residuals)
differences[1:10]
abs(mod2$residuals)[1:10]
source('~/Documents/ThirdModule/Practicum/different_scores.R')
source('~/Documents/ThirdModule/Practicum/different_scores.R')
source('~/Documents/ThirdModule/Practicum/different_scores.R')
source('~/Documents/ThirdModule/Practicum/different_scores.R')
source('~/Documents/ThirdModule/Practicum/different_scores.R')
source('~/Documents/ThirdModule/Practicum/different_scores.R')
.75^2
.75^3
.75^4
.75^5
head(df)
source('~/Documents/ThirdModule/TextMining/6-Clustering/kmeans_example_wine.R')
bf<-read.csv('/Users/conorosullivan/Documents/Dropbox/HamrickDataSets/CrossSectionalRegression/BodyFatPercentage/BodyFatPercentage.csv')
head(bg)
head(bf)
?factanal
scr<-factanal(bf[,c(2,4:ncol(bf))],factors=3,rotation="varimax")
scr
scr<-factanal(bf[,c(2,4:ncol(bf))],factors=4,rotation="varimax")
scr
scr<-factanal(bf[,c(2,4:ncol(bf))],factors=5,rotation="varimax")
scr
scr<-factanal(bf[,c(2,4:ncol(bf))],factors=6,rotation="varimax")
scr
scr<-factanal(bf[,c(2,4:ncol(bf))],factors=5,rotation="varimax")
scr
screeplot(scr)
mod1<-lm(BODYFAT ~ AGE + WEIGHT + HEIGHT + NECK + CHEST + ABDOMEN + HIP + THIGH + KNEE + ANKLE + BICEPS + FOREARM + WRIST, bf)
```
mod1
vif(mod1)
?vif
??vif
library(car)
vif(mod1)
summary(mod1)
summary(mod1)$r.squared
factanal(bf[,c(2,4:ncol(bf))],factors=5,rotation="varimax",scores="Bartlett")$scores
c(paste("Factor",c(1:5),sep=""),"BODYFAT")
scoremat<-data.frame(cbind(factanal(bf[,c(2,4:ncol(bf))],factors=5,rotation="varimax",scores="Bartlett")$scores,BODYFAT))
colnames(scoremat)<-c(paste("Factor",c(1:5),sep=""),"BODYFAT")
scoremat<-data.frame(cbind(factanal(bf[,c(2,4:ncol(bf))],factors=5,rotation="varimax",scores="Bartlett")$scores,bf$BODYFAT))
colnames(scoremat)<-c(paste("Factor",c(1:5),sep=""),"BODYFAT")
head(scoremat)
head(bf)
bf<-read.csv('/Users/conorosullivan/Documents/Dropbox/HamrickDataSets/CrossSectionalRegression/BodyFatPercentage/BodyFatPercentage.csv')
scr<-factanal(bf[,c(4:ncol(bf))],factors=3,rotation="varimax")
scr
scoremat<-data.frame(cbind(factanal(bf[,c(4:ncol(bf))],factors=5,rotation="varimax",scores="Bartlett")$scores,bf$BODYFAT))
colnames(scoremat)<-c(paste("Factor",c(1:5),sep=""),"BODYFAT")
mod2<-lm(BODYFAT ~ )
mod2<-lm(BODYFAT ~ .,scoremat)
summary(mod2)
ncol(bf)-4
scr<-factanal(bf[,c(4:ncol(bf))],factors=12,rotation="varimax")
scr<-factanal(bf[,c(4:ncol(bf))],factors=13,rotation="varimax")
scr<-factanal(bf[,c(4:ncol(bf))],factors=10,rotation="varimax")
scr<-factanal(bf[,c(4:ncol(bf))],factors=9,rotation="varimax")
scr<-factanal(bf[,c(4:ncol(bf))],factors=8,rotation="varimax")
scr
scr<-factanal(bf[,c(4:ncol(bf))],factors=3,rotation="varimax")
scr
scr<-factanal(bf[,c(4:ncol(bf))],factors=4,rotation="varimax")
scr
scoremat<-data.frame(cbind(factanal(bf[,c(4:ncol(bf))],factors=4,rotation="varimax",scores="Bartlett")$scores,bf$BODYFAT))
colnames(scoremat)<-c(paste("Factor",c(1:5),sep=""),"BODYFAT")
mod2<-lm(BODYFAT ~ .,scoremat)
colnames(scoremat)<-c(paste("Factor",c(1:4),sep=""),"BODYFAT")
mod2<-lm(BODYFAT ~ .,scoremat)
mod2
summary(mod2)
summary(mod1)
vif(mod2)
co<-read.csv('/Users/conorosullivan/Documents/Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/CorrelationMatrixTwentyFourPsychologicalTests/CorrelationMatrixTwentyFourPsychologicalTests.csv')
head(co)
co<-read.csv('/Users/conorosullivan/Documents/Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/CorrelationMatrixTwentyFourPsychologicalTests/CorrelationMatrixTwentyFourPsychologicalTests.csv', header=FALSE)
head(co)
pp<-princomp(co)
pp
summary(pp)
screeplot(pp)
eigen(pp)
nrow(pp)
nrow(co)
eigen(co)
eigen(co)$values
eigen(co)$values/sum(values)
eigen(co)$values/24
1/24
plot.ts(eigen(co)$values/24)
?princomp
?principal
library(psych)
?principal
a<-principal(co)
a
a<-principal(co, rotate="varimax")
a
a<-principal(co, rotate="varimax", covar=FALSE)
a
a<-principal(co, rotate="quatimax", covar=FALSE)
a
a<-principal(co, rotate="quatimax", covar=FALSE, n.factors=24)
a
head(b)
library(gdata)
b<-read.xls('/Users/conorosullivan/Documents/Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/MicrosoftFactorData/MicrosoftFactorData.xls')
head(b)
fa<-princomp(b[,c(6:11)])
fa
fa<-principal(b[,c(6:11)])
fa
fa<-principal(b[,c(6:11)], rotate='varimax')
fa
?factanala
?factanal
fa<-factanal(b[,c(6:11)], rotation='varimax')
fa<-factanal(b[,c(6:11)], factors=3, rotation='varimax')
fa
fa<-factanal(b[,c(6:11)], factors=4, rotation='varimax')
fa<-factanal(b[,c(6:11)], factors=3)
fa
head(b)
nrow(b)
tail(b)
b[200,]
b[100,]
b[170,]
b[162,]
b[166,]
b[167,]
install.packages('flImport')
library(quantmod)
library(quantmod)
library(plyr)
symbols<-c("PTTAX", "NHYMX", "CFNLX")
#1
l_ply(symbols, function(sym) try(getSymbols(sym)))
symbols <- symbols[symbols %in% ls()]
#2
sym.list <- llply(symbols, get)
#3
data <- xts()
for(i in seq_along(symbols)) {
symbol <- symbols[i]
data <- merge(data, get(symbol)[,paste(symbol, "Close", sep=".")])
}
data
?getSymbols
library(tseries)
?get.hist.quote
prices1 <- get.hist.quote("SPY", quote="Adj", start="2005-12-25", retclass="zoo")
price1
prices1
head(b)
prices1 <- get.hist.quote("PTTAX", quote="Adj", start="2005-12-25", retclass="zoo")
prices1 <- get.hist.quote("PTTAX", quote="Adj", start="2000-01-01", retclass="zoo")
prices1
tail(b)
prices1 <- get.hist.quote("PTTAX", quote="Adj", start="2000-01-01", end="2007-04-30", retclass="zoo")
tail(prices1)
b<-b[-c(1:167),]
nrow()
nrow(b)
length(prices1)
length(prices1/30)
length(prices1)/30
prices1 <- colMeans(matrix(prices1),nrows=87)
prices1 <- colMeans(matrix(prices1),nrow=87)
prices1 <- colMeans(matrix(prices1, nrow=87))
prices1
1840/87
prices1 <- get.hist.quote("PTTAX", quote="Adj", start="2000-01-01", end="2007-04-30", retclass="zoo")
prices1 <- colMeans(matrix(prices1, nrow=21))
prices1
prices2 <- get.hist.quote("NHYMX", quote="Adj", start="2000-01-01", end="2007-04-30", retclass="zoo")
prices2 <- colMeans(matrix(prices2, nrow=87/len(prices2)))
prices2 <- colMeans(matrix(prices2, nrow=87/length(prices2)))
prices2 <- colMeans(matrix(prices2, nrow=length(prices2)/87))
prices3 <- get.hist.quote("CFNLX", quote="Adj", start="2000-01-01", end="2007-04-30", retclass="zoo")
prices3 <- colMeans(matrix(prices3, nrow=length(prices3)/87))
prices2
prices3
length(prices3)
length(prices2)
length(prices1)
df<-cbind(scr, prices1[1:87], prices2[1:87], prices3[1:87])
colnames(df)<-c(colnames(b)[6:11], "PTTAX", "NHYMX", "CFNLX")
head(df)
head(scr)
fa<-factanal(b[,c(6:11)], factors=3, rotation='varimax', scores="regression")
scr<-fa$scores
df<-cbind(scr, prices1[1:87], prices2[1:87], prices3[1:87])
head(df)
colnames(df)<-c(colnames(b)[6:11], "PTTAX", "NHYMX", "CFNLX")
colnames(df)[4:6]<-c("PTTAX", "NHYMX", "CFNLX")
head(df)
mod1<-lm(PTTAX ~ Factor1+Factor2+Factor3, df)
df<-data.frame(cbind(scr, prices1[1:87], prices2[1:87], prices3[1:87]))
head(df)
colnames(df)[4:6]<-c("PTTAX", "NHYMX", "CFNLX")
mod1<-lm(PTTAX ~ Factor1+Factor2+Factor3, df)
summary(mod2)
summary(mod1)
(1-.19)^.5
(1-.51)^.5
(1-.75)^.5
.369^2+.594^2
0.9^2+0.7^2+0.5^2
fa<-principal(b[,c(6:11)], rotate='varimax')
fa
dat<-data.frame(f1=c(.64,.5,.46,.17,-.29,-.29,-.49,-.52,-.6),f2=c(0.02,-.06,-.24,.74,.66,-.08,.2,-.03,-.17))
plot(dat[,1],dat[,2])
plot(dat[,1],dat[,2], main="Original Factor Loadings", xlab="Factor 1", ylab="Factor 2")
dat %*% matrix(cos(45),sin(45),sin(-45),cos(45))
matrix(dat) %*% matrix(cos(45),sin(45),sin(-45),cos(45))
matrix(cos(45),sin(45),sin(-45),cos(45))
matrix(c(cos(45),sin(45),sin(-45),cos(45)))
matrix(dat) %*% matrix(c(cos(45),sin(45),sin(-45),cos(45)),nrow=2)
matrix(c(cos(45),sin(45),sin(-45),cos(45)),nrow=2)
matrix(dat)
matrix(dat[,1:2]) %*% matrix(c(cos(45),sin(45),sin(-45),cos(45)),nrow=2)
as.matrix(dat)
as.matrix(dat[,1:2]) %*% matrix(c(cos(45),sin(45),sin(-45),cos(45)),nrow=2)
rotated<-as.matrix(dat[,1:2]) %*% matrix(c(cos(45),sin(45),sin(-45),cos(45)),nrow=2)
plot(rotated[,1],rotated[,2], main="Rotated Factors", xlab="Rotated Factor 1", ylab="Rotated Factor 2")
20050/3
data(Seatbelts)
head(Seatbelts)
help(Seatbelts)
data(UKDriverDeaths)
data(UKDriverDeaths)
head(UKDriverDeaths)
str(UKDriverDeaths)
require(stats); require(graphics)
## work with pre-seatbelt period to identify a model, use logs
work <- window(log10(UKDriverDeaths), end = 1982+11/12)
par(mfrow = c(3, 1))
plot(work); acf(work); pacf(work)
par(mfrow = c(1, 1))
(fit <- arima(work, c(1, 0, 0), seasonal = list(order = c(1, 0, 0))))
z <- predict(fit, n.ahead = 24)
ts.plot(log10(UKDriverDeaths), z$pred, z$pred+2*z$se, z$pred-2*z$se,
lty = c(1, 3, 2, 2), col = c("black", "red", "blue", "blue"))
head(Seatbelts[,"kms"])
length(Seatbelts)
str(Seatbelts)
dd<-data.frame(Seatbelts)
head(dd)
head(time(Seatbelts))
seat<-data.frame(Seatbelts)
seat$t<-time(Seatbelts)
head(seat)
times <- time(Seatbelts)
print(times)
years <- floor(times)
years <- factor(years, ordered = TRUE)
cycle(times)        # 1 through 12 for each year
print(month.abb)    # month abbreviations
months <- factor(
month.abb[cycle(times)],
levels = month.abb,
ordered = TRUE
)
months
seat<-data.frame(Seatbelts)
seat$year<-years
seat$month<-months
seat$time<-as.numeric(times)
head(seat)
library(shiny)
shiny::runGitHub('msan622', 'conorosullivan', subdir='homework5')
library(shiny)
shiny::runGitHub('msan622', 'conorosullivan', subdir='homework5')
library(shiny)
shiny::runGitHub('msan622', 'conorosullivan', subdir='homework5')
source('~/Documents/FourthModule/visualization/5_hw/plotit.R')
source('~/Documents/FourthModule/visualization/5_hw/pretty.R')
source('~/Documents/FourthModule/visualization/5_hw/plotit.R')
source('~/Documents/FourthModule/visualization/5_hw/plotit.R')
source('~/Documents/FourthModule/visualization/5_hw/plotit.R')
source('~/Documents/FourthModule/visualization/5_hw/plotit.R')
source('~/Documents/FourthModule/visualization/5_hw/plotit.R')
source('~/Documents/FourthModule/visualization/5_hw/plotit.R')
source('~/Documents/FourthModule/visualization/5_hw/plotit.R')
source('~/Documents/FourthModule/visualization/5_hw/plotit.R')
source('~/Documents/FourthModule/visualization/5_hw/plotit.R')
source('~/Documents/FourthModule/visualization/5_hw/plotit.R')
shiny::runGitHub('msan622', 'conorosullivan', subdir='homework5')
library(shiny)
shiny::runGitHub('msan622', 'conorosullivan', subdir='homework5')
library(shiny)
runGitHub("msan622", "conorosullivan", subdir = "final-project")
ps<-read.txt(file.choose())
ps<-read.table(file.choose())
head(ps)
hist(ps)
hist(as.numeric(ps))
hist(as.numeric(unlist(ps)))
hist(as.numeric(unlist(ps)),breaks=seq(0,1,.05))
hist(as.numeric(unlist(ps)),breaks=seq(0,1,.03))
hist(as.numeric(unlist(ps)),breaks=seq(0,1,.025))
hist(as.numeric(unlist(ps)),breaks=seq(0,1,.0125))
hist(as.numeric(unlist(ps)),breaks=seq(0,1,.00625))
hist(as.numeric(unlist(ps)),breaks=seq(0,1,.00625),main="")
title("Histogram of p-values from KS Tests")
hist(as.numeric(unlist(ps)),breaks=seq(0,1,.00625),main="",xlab="")
hist(as.numeric(unlist(ps)),breaks=seq(0,1,.00625),main="",xlab="p-values")
title("Histogram of p-values from KS Tests from 1000 incidents")
nrow(ps)
setwd('/Users/conorosullivan/Documents/Coursework/msan622/homework5')
library(shiny)
runApp()
setwd('/Users/conorosullivan/Documents/Coursework/msan622/final-project')
runApp()
runApp()
hcl(h=seq(15, 375-360/2, length=2)%%360, c=100, l=65)
runApp()
